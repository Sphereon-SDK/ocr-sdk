/**
 * OCR
 * <b>The OCR API 'ocr' performs Optical Character Resolution on input files.</b>    The flow is generally as follows:  1. First upload an image/file using the /ocr POST endpoint. You will get back a job response that contains a job with its associated settings.  2. Start the job from a PUT request to the /ocr/{jobid} endpoint, with the Job and Settings JSON as request body. The ocr extraction will now start.  3. Check the job status from the /ocr/{jobid} GET endpoint until the status has changed to DONE or ERROR. Messaging using a websocket will be available as an alternative in a future version  4. Retrieve the OCR result using the /ocr/{jobid}/result GET endpoint. This will return the OCR result only when the status is DONE. In other cases it will return the Job Response JSON (with http code 202 instead of 200)      <b>Interactive testing: </b>A web based test console is available in the <a href=\"https://store.sphereon.com\">Sphereon API Store</a>
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.sphereon.sdk.ocr.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.sphereon.sdk.ocr.model.OCRJob;
import com.sphereon.sdk.ocr.model.OCRResult;
import com.sphereon.sdk.ocr.model.OCRTask;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;


/**
 * The OCR result
 */
@ApiModel(description = "The OCR result")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-30T16:03:53.449+02:00")
public class OCRResultResponse   {
  @SerializedName("result")
  private OCRResult result = null;

  @SerializedName("completionTime")
  private OffsetDateTime completionTime = null;

  @SerializedName("jobId")
  private String jobId = null;

  @SerializedName("creationTime")
  private OffsetDateTime creationTime = null;

  @SerializedName("inputs")
  private List<String> inputs = new ArrayList<String>();

  @SerializedName("updateTime")
  private OffsetDateTime updateTime = null;

  @SerializedName("job")
  private OCRJob job = null;

  @SerializedName("statusMessage")
  private String statusMessage = null;

  @SerializedName("tasks")
  private List<OCRTask> tasks = new ArrayList<OCRTask>();

  @SerializedName("queueTime")
  private OffsetDateTime queueTime = null;

  /**
   * The status of the job
   */
  public enum StatusEnum {
    @SerializedName("INPUTS_UPLOADED")
    INPUTS_UPLOADED("INPUTS_UPLOADED"),
    
    @SerializedName("PROCESSING")
    PROCESSING("PROCESSING"),
    
    @SerializedName("DONE")
    DONE("DONE"),
    
    @SerializedName("ERROR")
    ERROR("ERROR"),
    
    @SerializedName("DELETED")
    DELETED("DELETED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public OCRResultResponse result(OCRResult result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @ApiModelProperty(example = "null", value = "")
  public OCRResult getResult() {
    return result;
  }

  public void setResult(OCRResult result) {
    this.result = result;
  }

   /**
   * The completion date/time of this job in ISO 8601 format
   * @return completionTime
  **/
  @ApiModelProperty(example = "null", value = "The completion date/time of this job in ISO 8601 format")
  public OffsetDateTime getCompletionTime() {
    return completionTime;
  }

  public OCRResultResponse jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }

   /**
   * The creation date/time of this job in ISO 8601 format
   * @return creationTime
  **/
  @ApiModelProperty(example = "null", value = "The creation date/time of this job in ISO 8601 format")
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public OCRResultResponse inputs(List<String> inputs) {
    this.inputs = inputs;
    return this;
  }

  public OCRResultResponse addInputsItem(String inputsItem) {
    this.inputs.add(inputsItem);
    return this;
  }

   /**
   * The original input files. Currently supported inputs are: tiffs
   * @return inputs
  **/
  @ApiModelProperty(example = "null", required = true, value = "The original input files. Currently supported inputs are: tiffs")
  public List<String> getInputs() {
    return inputs;
  }

  public void setInputs(List<String> inputs) {
    this.inputs = inputs;
  }

   /**
   * The last update date/time of this job in ISO 8601 format
   * @return updateTime
  **/
  @ApiModelProperty(example = "null", value = "The last update date/time of this job in ISO 8601 format")
  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }

  public OCRResultResponse job(OCRJob job) {
    this.job = job;
    return this;
  }

   /**
   * Get job
   * @return job
  **/
  @ApiModelProperty(example = "null", value = "")
  public OCRJob getJob() {
    return job;
  }

  public void setJob(OCRJob job) {
    this.job = job;
  }

   /**
   * A status message, which can be informational, warning or error. AA message here does not indicate an error perse
   * @return statusMessage
  **/
  @ApiModelProperty(example = "null", value = "A status message, which can be informational, warning or error. AA message here does not indicate an error perse")
  public String getStatusMessage() {
    return statusMessage;
  }

  public OCRResultResponse tasks(List<OCRTask> tasks) {
    this.tasks = tasks;
    return this;
  }

  public OCRResultResponse addTasksItem(OCRTask tasksItem) {
    this.tasks.add(tasksItem);
    return this;
  }

   /**
   * The server supplied OCR task(s)
   * @return tasks
  **/
  @ApiModelProperty(example = "null", value = "The server supplied OCR task(s)")
  public List<OCRTask> getTasks() {
    return tasks;
  }

  public void setTasks(List<OCRTask> tasks) {
    this.tasks = tasks;
  }

   /**
   * The conversion queue date/time of this job in ISO 8601 format
   * @return queueTime
  **/
  @ApiModelProperty(example = "null", value = "The conversion queue date/time of this job in ISO 8601 format")
  public OffsetDateTime getQueueTime() {
    return queueTime;
  }

   /**
   * The status of the job
   * @return status
  **/
  @ApiModelProperty(example = "null", required = true, value = "The status of the job")
  public StatusEnum getStatus() {
    return status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OCRResultResponse oCRResultResponse = (OCRResultResponse) o;
    return Objects.equals(this.result, oCRResultResponse.result) &&
        Objects.equals(this.completionTime, oCRResultResponse.completionTime) &&
        Objects.equals(this.jobId, oCRResultResponse.jobId) &&
        Objects.equals(this.creationTime, oCRResultResponse.creationTime) &&
        Objects.equals(this.inputs, oCRResultResponse.inputs) &&
        Objects.equals(this.updateTime, oCRResultResponse.updateTime) &&
        Objects.equals(this.job, oCRResultResponse.job) &&
        Objects.equals(this.statusMessage, oCRResultResponse.statusMessage) &&
        Objects.equals(this.tasks, oCRResultResponse.tasks) &&
        Objects.equals(this.queueTime, oCRResultResponse.queueTime) &&
        Objects.equals(this.status, oCRResultResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(result, completionTime, jobId, creationTime, inputs, updateTime, job, statusMessage, tasks, queueTime, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OCRResultResponse {\n");
    
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    completionTime: ").append(toIndentedString(completionTime)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    queueTime: ").append(toIndentedString(queueTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

